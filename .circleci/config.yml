version: 2.1

jobs:
  build_and_publish:
    docker:
      - image: alpine
    working_directory: ~/project
    shell: /usr/bin/env bash -euo pipefail
    steps:
      - run:
          name: Install Dependencies
          shell: /bin/sh # Until this is run, we don't have bash.
          command: apk add --no-progress bash make git openssh curl hugo jq
      - add_ssh_keys:
          fingerprints:
            - "00:b6:0c:6b:77:f4:08:7e:06:0f:81:b2:43:09:2b:11"
      - run:
          name: Configure Git & SSH
          environment:
            GITHUB_PUBLIC_SSH_KEY: AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
          command: |
            git version
            git config --global user.email "samsalisbury+fieldnotes-tech-bot@gmail.com"
            git config --global user.name "fieldnotes-tech-bot" 
            [ -d ~/.ssh ] || mkdir -p ~/.ssh
            echo "github.com ssh-rsa $GITHUB_PUBLIC_SSH_KEY" >> ~/.ssh/known_hosts
      - run:
          name: Clone
          command: git clone git@github.com:fieldnotes-tech/fieldnotes.tech ~/project
      - run:
          name: Build
          command: make build
      - run:
          name: Publish
          command: make publish
      - run:
          name: Await GitHub Pages Build
          command: |
            URL="https://api.github.com/repos/fieldnotes-tech/fieldnotes-tech.github.io/pages/builds?per_page=3"
            STATUS=nothing
            COUNT=0
            SHA=$(cd public && git rev-parse HEAD)
            until [ $STATUS = built ] || [ $STATUS = errored ] || [ $COUNT = 60 ]; do
              sleep 1
              COUNT=$((COUNT+1))
              STATUS=$(curl -sfu $GITHUB_USER:$GITHUB_API_TOKEN $URL \
              | jq -r ".[] | select(.commit == env.CIRCLE_SHA1)" | .status)
              [ -n "$STATUS" ] || STATUS=nothing
            done
            if [ $STATUS != built ]; then
              echo "Failed: final status from github was '$STATUS'"
              exit 1
            fi
            echo "GitHub Pages build complete."

workflows:
  publish:
    jobs:
      - build_and_publish
